


body {
    
  
  
   background-color:#003366;
  
}

/* Portrait layout (default) */
.app {
   
    position:absolute;             /* position in the center of the screen */
    left:50%;
    top:50%;
    height:50px;                   /* text area height */
    width:225px;                   /* text area width */
    text-align:center;
    padding:180px 0px 0px 0px;     /* image height is 200px (bottom 20px are overlapped with text) */
    margin:-115px 0px 0px -112px;  /* offset vertical: half of image height and text area height */
                                   /* offset horizontal: half of text area width */
}

/* Landscape layout (with min-width) */
@media screen and (min-aspect-ratio: 1/1) and (min-width:400px) {
    .app {
        background-position:left center;
        padding:75px 0px 75px 170px;  /* padding-top + padding-bottom + text area = image height */
        margin:-90px 0px 0px -198px;  /* offset vertical: half of image height */
                                      /* offset horizontal: half of image width and text area width */
    }
}
.HR{
    font-size: 20px;
}
h1 {
    font-size:24px;
    font-weight:normal;
    margin:0px;
    overflow:visible;
    padding:0px;
    text-align:center;
    color: red;
}
h2{
    font-size: 24px;
    background-position: left;
}

.event {
    border-radius:4px;
    -webkit-border-radius:4px;
    color:#FFFFFF;
    font-size:12px;
    margin:0px 30px;
    padding:2px 0px;
}

.event.listening {
    background-color:#00001a;
    display:block;
}

.event.received {
    background-color:#4B946A;
    display:none;
}

@keyframes fade {
    from { opacity: 1.0; }
    50% { opacity: 0.4; }
    to { opacity: 1.0; }
}
 
@-webkit-keyframes fade {
    from { opacity: 1.0; }
    50% { opacity: 0.4; }
    to { opacity: 1.0; }
}
 
.blink {
    animation:fade 3000ms infinite;
    -webkit-animation:fade 3000ms infinite;
}
h3{
    color:white;
}
p{
    font-size: 10;
    color:white;
}















div.menu2
{
    /*width:500px;margin:0 auto;*//*Uncomment this line to make the menu center-aligned.*/
    text-align:center;
    background-image: url(bg1.gif);
    border:1px solid black;
    font-size:0;
}

div.menu2 a
{
    display: inline-block;
    padding: 0 20px;
    background-image: url(bg.gif);
    color:White;
    text-decoration:none;
    font: bold 12px Arial;
    line-height: 32px;
}

div.menu2 a:hover, div.menu2 a.current
{
    background-position:0 -60px;
}

div.menu2 a.dummy
{
    width:2px;
    padding:0 0;
}

button{
    font-size: 20px;
    background-position: center;

}





body {  /* fix webkit adjacent sibling bug */
  -webkit-animation: bugfix infinite 1s; 
}

@-webkit-keyframes bugfix { 
  from {padding:0;} 
  to {padding:0;} 
}

.mobilesidemenu {
    width: 0;
    /* width of main container doesn't need width */
}

.mobilesidemenu, .mobilesidemenu * {
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

.mobilesidemenu input[type="checkbox"] {
    /* checkbox used to toggle menu state */
    position: absolute;
    left: 0;
    top: 0;
    visibility: hidden;
}

.mobilesidemenu > label {
    /* Main label icon to toggle menu state */
    z-index: 100;
    display: block;
    position: relative;
    font-size: 10px;
    /* change font size to change label dimensions. Leave width/height below alone */
    width: 3.5em;
    height: 3em;
    top: 0;
    left: 0;
    background: white;
    text-indent: -1000px;
    border: 0.6em solid black;
    /* border color */
    border-width: 0.6em 0;
    cursor: pointer;
    -moz-transition: all 0.3s ease-in;
    -webkit-transition: all 0.3s ease-in;
    transition: all 0.3s ease-in;
    /* transition for animating label */
}


.mobilesidemenu > label::before, .mobilesidemenu > label::after {
    /* inner stripes inside label */
    content: "";
    display: block;
    position: absolute;
    width: 100%;
    height: 0.6em;
    top: 50%;
    margin-top: -0.3em;
    left: 0;
    background: black;
    /* stripes background color. Change to match border color of parent label above */
    -moz-transform: rotate(0);
    -webkit-transform: rotate(0);
    transform: rotate(0);
    -moz-transition: all 0.3s ease-in;
    -webkit-transition: all 0.3s ease-in;
    transition: all 0.3s ease-in;
    /* transition for flipping label */
}

.mobilesidemenu nav {
    /* NAV menu inside container */
    margin: 0;
    padding: 5px;
    position: fixed;
    text-transform: uppercase;
    border-right: 1px solid gray;
    font: bold 14px Verdana;
    width: 280px;
    /* width of nav menu */
    height: 100%;
    left: -280px;
    /* set left to -width of menu */
    top: 0;
    z-index: 10000;
        -webkit-transform: translate3d(0, 0, 0); /* trigger hardware acceleration */
        transform: translate3d(0, 0, 0);
    background: rgb(242,242,242);
    /* Old browsers */
    background: -moz-radial-gradient(center, ellipse cover, rgba(242,242,242,1) 0%, rgba(219,219,219,1) 100%);
    /* FF3.6+ */
    background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,rgba(242,242,242,1)), color-stop(100%,rgba(219,219,219,1)));
    /* Chrome,Safari4+ */
    background: -webkit-radial-gradient(center, ellipse cover, rgba(242,242,242,1) 0%,rgba(219,219,219,1) 100%);
    /* Chrome10+,Safari5.1+ */
    background: -o-radial-gradient(center, ellipse cover, rgba(242,242,242,1) 0%,rgba(219,219,219,1) 100%);
    /* Opera 12+ */
    background: -ms-radial-gradient(center, ellipse cover, rgba(242,242,242,1) 0%,rgba(219,219,219,1) 100%);
    /* IE10+ */
    background: radial-gradient(ellipse at center, rgba(242,242,242,1) 0%,rgba(219,219,219,1) 100%);
    /* W3C */
    -moz-transition: all 0.3s ease-in;
    -webkit-transition: all 0.3s ease-in;
    transition: all 0.3s ease-in;
    /* transition for animating nav in and out */
}


.mobilesidemenu nav h2 {
    color: black;
    margin-bottom: 10px;
    border-bottom: 2px solid #73462d;
}

.mobilesidemenu ul {
    /* UL menu inside container */
    list-style: none;
    margin: 0;
    padding: 0;
}

.mobilesidemenu li {
}


.mobilesidemenu li a {
    display: block;
    text-decoration: none;
    font-size: 1.4em;
    /* font size of menu links */
    border-left: 8px solid gray;
    border-bottom: 1px solid #c1c1c1;
    color: #3b3b3b;
    margin: 0;
    padding: 12px;
}

.mobilesidemenu li a:hover {
    background: black;
    color: white;
}


.mobilesidemenu nav label {
    /* label button inside nav to close menu */
    cursor: pointer;
    position: absolute;
    text-transform: lowercase;
    right: 0;
    top: 0;
    -moz-border-radius: 0 0 0 40px;
    -webkit-border-radius: 0 0 0 40px;
    border-radius: 0 0 0 40px;
    width: 40px;
    height: 30px;
    background: black;
    box-shadow: 0 0 5px gray;
    text-align: center;
}


.mobilesidemenu nav label::after {
    /* label button x */
    content: "x";
    color: white;
    display: block;
    font-size: 16px;
    margin-top: 2px;
    margin-left: 6px;
    -moz-transition: all 0.3s ease-in;
    -webkit-transition: all 0.3s ease-in;
    transition: all 0.3s ease-in;
}

.mobilesidemenu .overlay {
    /* overlay that covers entire page when menu is open */
    position: fixed;
    width: 100%;
    height: 100%;
    left: 0;
    top: 0;
    opacity: .6;
    background: black;
    z-index: 1001;
    visibility: hidden;
}

.mobilesidemenu .overlay label {
    /* label of overlay that closes menu when clicked on */
    width: 100%;
    height: 100%;
    position: absolute;
}


.mobilesidemenu nav label:hover::after {
    /* state of NAV label::after when mouse moves over */
    -moz-transform: rotatey(180deg);
    -ms-transform: rotatey(180deg);
    -webkit-transform: rotatey(180deg);
    transform: rotatey(180deg);
    /* flip labels vertically onMouseover */
}

.mobilesidemenu input[type="checkbox"]:checked ~ label {
    /* state of main menu label when menu is open  */
    border-color: transparent;
}

.mobilesidemenu input[type="checkbox"]:checked ~ label::before {
    /* state of main menu label::before when menu is open  */
    transform: rotate(-45deg);
}

.mobilesidemenu input[type="checkbox"]:checked ~ label::after {
    /* state of main menu label::after when menu is open  */
    transform: rotate(45deg);
}

.mobilesidemenu input[type="checkbox"]:checked ~ nav {
    /* state of NAV when menu is open  */
    left: 0;
    /* set left to 0 to animate it into view  */
}

.mobilesidemenu input[type="checkbox"]:checked ~ div.overlay {
    /* state of overlay when menu is open  */
    visibility: visible;
}

</style>


<!--[if lte IE 8]>
<style>

.mobilesidemenu > label{
    border: 6px solid black;
    background: #eee;
    height: 30px;
}

</style>

<script>
 // ie 8 menu compatibility code:
document.createElement("nav")
window.onload = function(){
    var mobilemenunav = document.getElementById("msidemenu")
    var mobilemaintoggler = document.getElementById("maintoggler")
    var mobilenavtoggler = document.getElementById("navtoggler")
    mobilemaintoggler.onclick = function(){
        mobilemenunav.style.left = 0
    }
    mobilenavtoggler.onclick = function(){
        mobilemenunav.style.left = '-100%'
    }
}